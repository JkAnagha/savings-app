{"version":3,"sources":["context/BillContext.js","components/AddBills/AddBills.js","components/BillsList/BillsList.js","components/BillTotal/BillTotal.js","components/BillOptions/BillOptions.js","components/EditBills/EditBills.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["BillContext","createContext","BillProvider","children","useState","bills","setBills","selectedCostInterval","setSelectedCostInterval","editModeEnabled","setEditModeEnabled","useEffect","JSON","parse","localStorage","getItem","alphabeticalOrder","sort","a","b","title","toUpperCase","Provider","value","updateBills","bill","updatedBills","setItem","stringify","editBill","billToUpdate","billsFiltered","filter","deleteBill","billToDelete","AddBills","newBillTitle","setNewBillTitle","newBillCost","setNewBillCost","useContext","className","placeholder","type","onChange","e","target","onClick","costValid","Number","parseFloat","split","find","char","billObjectValid","monthlyCost","BillsList","map","index","defaultChecked","enabled","BillTotal","moneyIntervalTransform","cost","reduce","acc","val","toFixed","BillOptions","innerText","EditBills","billIndex","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4f90d0a.chunk.js","sourcesContent":["import React, { useState, createContext, useEffect } from 'react'\r\n\r\nconst BillContext = createContext()\r\n\r\n\r\nconst BillProvider = ({ children }) => {\r\n    const [bills, setBills] = useState([])\r\n    const [selectedCostInterval, setSelectedCostInterval] = useState('Monthly')\r\n    const [ editModeEnabled, setEditModeEnabled ] = useState(false)\r\n\r\n    useEffect(() => {\r\n      setBills(JSON.parse(localStorage.getItem('updated-bills')) || [])\r\n    }, [setBills])\r\n\r\n    const updateBills = (bill) => {\r\n       const updatedBills = alphabeticalOrder([\r\n           ...bills, bill\r\n       ])\r\n       localStorage.setItem('updated-bills', JSON.stringify(updatedBills))\r\n       setBills(updatedBills)\r\n    }\r\n\r\n    const alphabeticalOrder = (bills) => {\r\n        return bills.sort((a,b) => \r\n        a.title.toUpperCase() < b.title.toUpperCase() ? -1 : 0)\r\n    }\r\n\r\n    const editBill = (billToUpdate) => {\r\n        const billsFiltered = bills.filter((bill) => bill.title !== billToUpdate.title)\r\n        const updatedBills = alphabeticalOrder([...billsFiltered, billToUpdate])\r\n        localStorage.setItem('updated-bills', JSON.stringify(updatedBills))\r\n       setBills(updatedBills)\r\n    }\r\n    \r\n    const deleteBill = (billToDelete) => {\r\n        const updatedBills = bills.filter((bill) => bill.title !== billToDelete.title)\r\n        localStorage.setItem('updated-bills', JSON.stringify(updatedBills))\r\n        setBills(updatedBills)\r\n    }\r\n\r\n    return(\r\n        <BillContext.Provider value={{bills, updateBills, editBill, selectedCostInterval, setSelectedCostInterval,\r\n         setEditModeEnabled, editModeEnabled, deleteBill }}>\r\n            {children}\r\n        </BillContext.Provider>\r\n    );\r\n}\r\n\r\nexport { BillContext, BillProvider }\r\n","import React, { useContext, useState } from 'react' \r\nimport { BillContext } from '../../context/BillContext'\r\nimport './styles.css'\r\n\r\nconst AddBills = () => {\r\n    const [newBillTitle, setNewBillTitle] = useState('')\r\n    const [newBillCost, setNewBillCost] = useState('')\r\n\r\n    const { updateBills } = useContext(BillContext)\r\n\r\n    const billObjectValid = () => {\r\n        //validation of bill \r\n        //cost contains only numbers\r\n        //title contains letters and not only whitespaces\r\n        const costValid = newBillCost && Number.parseFloat(newBillCost)\r\n\r\n        const titleValid = newBillTitle && newBillTitle.split('').find(char => char !== ' ')\r\n        return titleValid && costValid\r\n    }\r\n\r\n    const clearForm = () => {\r\n        setNewBillCost('')\r\n        setNewBillTitle('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-bill-container\">\r\n         <input className=\"add-bill-form-control form-control\" placeholder='Enter Bill Title' type=\"text\" value={newBillTitle} \r\n         onChange={(e) => setNewBillTitle(e.target.value)}></input>\r\n         <input className=\"add-bill-form-control form-control\" placeholder='Enter Bill Cost/Month' type=\"number\" value={newBillCost} \r\n         onChange={(e) => setNewBillCost(e.target.value)}></input>\r\n         <button className=\"add-bill-form-control btn btn-primary\"\r\n         onClick={() => {\r\n          if(billObjectValid()) {\r\n          updateBills({\r\n              title: newBillTitle,\r\n              monthlyCost: newBillCost\r\n          });\r\n          clearForm();\r\n          }\r\n         }}>Add Bill</button>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default AddBills","import React, { useContext } from 'react' \r\nimport './styles.css'\r\nimport { BillContext } from '../../context/BillContext'\r\n\r\n\r\nconst BillsList = () => {\r\nconst { bills, editBill, setEditModeEnabled } = useContext( BillContext )\r\n    return (\r\n        <div className=\"bills-list-container\">\r\n            <h6 className='edit-mode-btn' onClick={() => setEditModeEnabled(true)}>Edit</h6>\r\n            {\r\n                bills.map((bill, index) => {\r\n                    return(\r\n                        <div key={index} className='bills-list-row'>\r\n                            <input type='checkbox' className='form-check-input'\r\n                                //checked={bill.enabled}\r\n                                defaultChecked={bill.enabled}\r\n                                onChange={() => editBill({\r\n                                    title: bill.title,\r\n                                    monthlyCost: bill.monthlyCost,\r\n                                    enabled: !bill.enabled\r\n                                })}>\r\n                            </input>\r\n                            <div className='bills-list-row-content'>\r\n                                {bill.title} - Rs.{bill.monthlyCost}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default BillsList","import React, { useContext } from 'react'\r\nimport './styles.css'\r\nimport { BillContext } from '../../context/BillContext'\r\n\r\nconst BillTotal = () => {\r\n\r\n    const { bills, selectedCostInterval } = useContext(BillContext)\r\n    const moneyIntervalTransform = (cost) =>{\r\n        const monthlyCost = Number.parseFloat(cost)\r\n        switch(selectedCostInterval) {\r\n            case 'Monthly':\r\n              return monthlyCost;\r\n            case 'Yearly':\r\n                return monthlyCost * 12;\r\n            case 'Weekly':\r\n                return monthlyCost * 12 / 52;\r\n            case 'Daily':\r\n                return monthlyCost * 12 / 365;\r\n            default:\r\n                return 0;\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n           <div className='bill-total-container'>\r\n              { selectedCostInterval } bill cost : \r\n              <span className='total-cost'>\r\n                  {\r\n                   ' Rs ' + bills.reduce((acc, val) => {\r\n                      return val.enabled ? moneyIntervalTransform(val.monthlyCost) + acc: acc;\r\n                  }, 0).toFixed(2)\r\n                  }    \r\n              </span>\r\n            </div> \r\n            <div className='total-saved-container'>\r\n              { selectedCostInterval } saved : \r\n              <span className='total-saved'>\r\n                  {\r\n                   ' Rs ' + bills.reduce((acc, val) => {\r\n                      return !val.enabled ? moneyIntervalTransform(val.monthlyCost) + acc: acc;\r\n                  }, 0).toFixed(2)\r\n                  }    \r\n              </span>\r\n            </div> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default BillTotal\r\n\r\n","import React, { useContext } from 'react'\r\nimport './styles.css'\r\nimport { BillContext } from '../../context/BillContext'\r\n\r\nconst BillOptions = () => {\r\n\r\n    const { selectedCostInterval, setSelectedCostInterval } = useContext(BillContext)\r\n\r\n    return (\r\n        <div className='interval-option-container'>\r\n            <div className={ selectedCostInterval === 'Daily' ? 'selected-interval' : 'interval'}\r\n            onClick={(e) => setSelectedCostInterval(e.target.innerText)}>\r\n                Daily\r\n            </div>\r\n            <div className={ selectedCostInterval === 'Weekly' ? 'selected-interval' : 'interval'}\r\n            onClick={(e) => setSelectedCostInterval(e.target.innerText)}>\r\n                Weekly\r\n            </div>\r\n            <div className={ selectedCostInterval === 'Monthly' ? 'selected-interval' : 'interval'}\r\n            onClick={(e) => setSelectedCostInterval(e.target.innerText)}>\r\n                Monthly\r\n            </div>\r\n            <div className={ selectedCostInterval === 'Yearly' ? 'selected-interval' : 'interval'}\r\n            onClick={(e) => setSelectedCostInterval(e.target.innerText)}>\r\n                Yearly\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BillOptions\r\n","import React, {useContext} from 'react'\r\nimport'./styles.css'\r\nimport { BillContext } from '../../context/BillContext'\r\nconst EditBills = () => {\r\n\r\n    const { bills, setEditModeEnabled, editBill, deleteBill } = useContext(BillContext)\r\n\r\n    return (\r\n        <div className='edit-bill-container'>\r\n            <h6 className='edit-mode-btn' onClick={() => setEditModeEnabled(false)}>Done</h6>\r\n            {\r\n                bills.map((bill, billIndex) => {\r\n                    return(\r\n                        <div key={billIndex} className='edit-bill-row'>\r\n                            <div className='edit-bill-row-content'>\r\n                                <div className='edit-bill-title'>{bill.title}</div>\r\n                                <input className='edit-bill-cost-input' type='number' value={bill.monthlyCost}\r\n                                onChange={(e) => editBill({\r\n                                    title: bill.title,\r\n                                    enabled: bill.enabled,\r\n                                    monthlyCost: e.target.value\r\n                                })}></input>\r\n                                <h6 onClick={() => deleteBill(bill)} className='delete-btn'>DELETE</h6>\r\n                            </div>\r\n                            <hr></hr>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditBills\r\n","import React, { useContext } from 'react'\nimport './App.css';\nimport AddBills from '../AddBills/AddBills'\nimport BillsList from '../BillsList/BillsList'\nimport BillTotal from '../BillTotal/BillTotal';\nimport BillOptions from '../BillOptions/BillOptions';\nimport EditBills from '../EditBills/EditBills';\nimport { BillContext } from '../../context/BillContext';\n\nconst App = () => {\n\nconst { editModeEnabled } = useContext(BillContext)\n\n  return (\n    <div className=\"bills-container\">\n        {\n          editModeEnabled ? <EditBills/> : <span><BillOptions/><AddBills/><BillTotal/><BillsList/></span>\n        }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BillProvider } from './context/BillContext'\n\nReactDOM.render(\n    <BillProvider>\n      <App />\n    </BillProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}